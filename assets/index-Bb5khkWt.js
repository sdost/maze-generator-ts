!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);class s{constructor(e,s){this.canvas=e,this.maze=s,t(this,"ctx"),t(this,"cellSize",0),t(this,"offsetX",0),t(this,"offsetY",0);const i=e.getContext("2d");if(!i)throw new Error("Could not get canvas context");this.ctx=i,this.calculateDimensions()}calculateDimensions(){this.cellSize=Math.min((this.canvas.width-40)/this.maze.width,(this.canvas.height-40)/this.maze.height),this.offsetX=(this.canvas.width-this.maze.width*this.cellSize)/2,this.offsetY=(this.canvas.height-this.maze.height*this.cellSize)/2}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawMaze()}renderSolution(e){this.render(),this.drawPath(e.path,"#ff0000",3)}renderSolvingProgress(e,t,s){this.render(),this.drawCells(s,"#cccccc",.5),this.drawCells(t,"#90EE90",.5),this.drawPath(e,"#ff0000",2)}drawMaze(){this.ctx.fillStyle="#ffffff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);for(let e=0;e<this.maze.height;e++)for(let t=0;t<this.maze.width;t++){const s=this.maze.getCell(t,e);s&&this.drawCell(s)}this.drawCell(this.maze.getStartCell(),"#00ff00"),this.drawCell(this.maze.getEndCell(),"#ff0000")}drawCell(e,t="#000000"){const{x:s,y:i}=e.position,r=this.offsetX+s*this.cellSize,a=this.offsetY+i*this.cellSize;this.ctx.strokeStyle=t,this.ctx.lineWidth=2,e.hasWall(0)&&(this.ctx.beginPath(),this.ctx.moveTo(r,a),this.ctx.lineTo(r+this.cellSize,a),this.ctx.stroke()),e.hasWall(1)&&(this.ctx.beginPath(),this.ctx.moveTo(r+this.cellSize,a),this.ctx.lineTo(r+this.cellSize,a+this.cellSize),this.ctx.stroke()),e.hasWall(2)&&(this.ctx.beginPath(),this.ctx.moveTo(r,a+this.cellSize),this.ctx.lineTo(r+this.cellSize,a+this.cellSize),this.ctx.stroke()),e.hasWall(3)&&(this.ctx.beginPath(),this.ctx.moveTo(r,a),this.ctx.lineTo(r,a+this.cellSize),this.ctx.stroke())}drawPath(e,t,s){if(e.length<2)return;this.ctx.strokeStyle=t,this.ctx.lineWidth=s,this.ctx.beginPath();const i=e[0];this.ctx.moveTo(this.offsetX+(i.x+.5)*this.cellSize,this.offsetY+(i.y+.5)*this.cellSize);for(let r=1;r<e.length;r++){const t=e[r];this.ctx.lineTo(this.offsetX+(t.x+.5)*this.cellSize,this.offsetY+(t.y+.5)*this.cellSize)}this.ctx.stroke()}drawCells(e,t,s){this.ctx.fillStyle=t,this.ctx.globalAlpha=s;for(const i of e)this.ctx.fillRect(this.offsetX+i.x*this.cellSize,this.offsetY+i.y*this.cellSize,this.cellSize,this.cellSize);this.ctx.globalAlpha=1}}var i=Object.defineProperty,r=(e,t,s)=>((e,t,s)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class a{constructor(e,t){this.canvas=e,this.onError=t,r(this,"worker"),r(this,"renderer",null),this.worker=new Worker(new URL("/maze-generator-ts/assets/maze-worker-D3LJRGYZ.js",import.meta.url)),this.setupMessageHandler()}setupMessageHandler(){this.worker.onmessage=e=>{const{type:t,payload:s}=e.data;switch(t){case"progress":this.handleProgress(s);break;case"complete":this.handleComplete(s);break;case"error":this.onError(s.message||"Unknown error")}}}handleProgress(e){const{type:t,currentState:s,currentPath:i,openSet:r,closedSet:a}=e;if(this.renderer)switch(t){case"generate":case"solve":break;case"iterate":s&&this.renderer.render();break;case"iterateSolution":i&&r&&a&&this.renderer.renderSolvingProgress(i,r,a)}}handleComplete(e){const{type:t,maze:i,solution:r}=e;if(this.renderer)switch(t){case"generate":i&&(this.renderer=new s(this.canvas,i),this.renderer.render());break;case"solve":r&&this.renderer.renderSolution(r)}}generateMaze(e){this.worker.postMessage({type:"generate",payload:e})}iterateMaze(){this.worker.postMessage({type:"iterate"})}solveMaze(){this.worker.postMessage({type:"solve"})}iterateSolution(){this.worker.postMessage({type:"iterateSolution"})}terminate(){this.worker.terminate()}}class n extends Error{constructor(e,t){super(e),this.code=t,this.name="MazeError"}}class l extends n{constructor(e){super(e,"MAZE_GENERATION_ERROR"),this.name="MazeGenerationError"}}var o=Object.defineProperty,h=(e,t,s)=>((e,t,s)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class c{constructor(){h(this,"workerManager"),h(this,"isGenerating",!1),h(this,"isSolving",!1);const e=document.getElementById("mazeCanvas");if(!e)throw new Error("Canvas element not found");e.width=800,e.height=800,this.workerManager=new a(e,(e=>{alert(e),this.isGenerating=!1,this.isSolving=!1})),this.setupEventListeners()}setupEventListeners(){const e=document.getElementById("generate"),t=document.getElementById("solve");e&&e.addEventListener("click",(()=>this.handleGenerate())),t&&t.addEventListener("click",(()=>this.handleSolve()))}handleGenerate(){if(this.isGenerating||this.isSolving)return;const e=parseInt(document.getElementById("width").value),t=parseInt(document.getElementById("height").value),s=parseInt(document.getElementById("seed").value);if(isNaN(e)||isNaN(t)||isNaN(s))alert("Please enter valid numbers for width, height, and seed");else try{this.isGenerating=!0,this.workerManager.generateMaze({width:e,height:t,seed:s,algorithm:"kruskal",renderer:"canvas",animationSpeed:100,cellSize:20})}catch(i){this.isGenerating=!1,alert(i instanceof Error?i.message:"Failed to generate maze")}}handleSolve(){if(!this.isGenerating&&!this.isSolving)try{this.isSolving=!0,this.workerManager.solveMaze()}catch(e){this.isSolving=!1,e instanceof l?alert(e.message):alert("Failed to solve maze")}}}document.addEventListener("DOMContentLoaded",(()=>{new c}));
//# sourceMappingURL=index-Bb5khkWt.js.map
