!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);class i{constructor(t,i){this.canvas=t,this.maze=i,e(this,"ctx"),e(this,"cellSize",0),e(this,"offsetX",0),e(this,"offsetY",0);const s=t.getContext("2d");if(!s)throw new Error("Could not get canvas context");this.ctx=s,this.calculateDimensions()}updateMaze(t){this.maze=t,this.calculateDimensions()}calculateDimensions(){this.cellSize=Math.min((this.canvas.width-40)/this.maze.width,(this.canvas.height-40)/this.maze.height),this.offsetX=(this.canvas.width-this.maze.width*this.cellSize)/2,this.offsetY=(this.canvas.height-this.maze.height*this.cellSize)/2}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawMaze()}renderSolution(t){this.render(),this.drawPath(t.path,"#ff0000",3)}renderSolvingProgress(t,e,i){this.render(),this.drawCells(i,"#cccccc",.5),this.drawCells(e,"#90EE90",.5),this.drawPath(t,"#ff0000",2)}drawMaze(){this.ctx.fillStyle="#ffffff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);for(let t=0;t<this.maze.height;t++)for(let e=0;e<this.maze.width;e++){const i=this.maze.getCell(e,t);i&&this.drawCell(i)}this.drawCell(this.maze.getStartCell(),"#00ff00"),this.drawCell(this.maze.getEndCell(),"#ff0000")}drawCell(t,e="#000000"){const{x:i,y:s}=t.position,n=this.cellSize,r=this.cellSize;t===this.maze.getStartCell()?(this.ctx.fillStyle="rgba(0, 255, 0, 0.2)",this.ctx.fillRect(this.offsetX+i*n,this.offsetY+s*r,n,r)):t===this.maze.getEndCell()&&(this.ctx.fillStyle="rgba(255, 0, 0, 0.2)",this.ctx.fillRect(this.offsetX+i*n,this.offsetY+s*r,n,r)),this.ctx.strokeStyle=e,this.ctx.lineWidth=2,t.hasWall(0)&&(this.ctx.beginPath(),this.ctx.moveTo(this.offsetX+i*n,this.offsetY+s*r),this.ctx.lineTo(this.offsetX+(i+1)*n,this.offsetY+s*r),this.ctx.stroke()),t.hasWall(1)&&(this.ctx.beginPath(),this.ctx.moveTo(this.offsetX+(i+1)*n,this.offsetY+s*r),this.ctx.lineTo(this.offsetX+(i+1)*n,this.offsetY+(s+1)*r),this.ctx.stroke()),t.hasWall(2)&&(this.ctx.beginPath(),this.ctx.moveTo(this.offsetX+i*n,this.offsetY+(s+1)*r),this.ctx.lineTo(this.offsetX+(i+1)*n,this.offsetY+(s+1)*r),this.ctx.stroke()),t.hasWall(3)&&(this.ctx.beginPath(),this.ctx.moveTo(this.offsetX+i*n,this.offsetY+s*r),this.ctx.lineTo(this.offsetX+i*n,this.offsetY+(s+1)*r),this.ctx.stroke())}drawPath(t,e,i){if(t.length<2)return;this.ctx.strokeStyle=e,this.ctx.lineWidth=i,this.ctx.beginPath();const s=t[0];this.ctx.moveTo(this.offsetX+(s.x+.5)*this.cellSize,this.offsetY+(s.y+.5)*this.cellSize);for(let n=1;n<t.length;n++){const e=t[n];this.ctx.lineTo(this.offsetX+(e.x+.5)*this.cellSize,this.offsetY+(e.y+.5)*this.cellSize)}this.ctx.stroke()}drawCells(t,e,i){this.ctx.fillStyle=e,this.ctx.globalAlpha=i;for(const s of t)this.ctx.fillRect(this.offsetX+s.x*this.cellSize,this.offsetY+s.y*this.cellSize,this.cellSize,this.cellSize);this.ctx.globalAlpha=1}}var s=Object.defineProperty,n=(t,e,i)=>((t,e,i)=>e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class r{constructor(t,e){this._position=t,n(this,"_walls"),n(this,"_visited",!1),this._walls=new Array(e).fill(!0)}get position(){return this._position}get walls(){return this._walls}get visited(){return this._visited}set visited(t){this._visited=t}removeWall(t){t>=0&&t<this._walls.length&&(this._walls[t]=!1)}hasWall(t){return t>=0&&t<this._walls.length&&this._walls[t]}equals(t){return this._position.x===t._position.x&&this._position.y===t._position.y}toString(){return`Cell(${this._position.x}, ${this._position.y})`}}var l=Object.defineProperty,a=(t=>(t[t.Top=0]="Top",t[t.Right=1]="Right",t[t.Bottom=2]="Bottom",t[t.Left=3]="Left",t))(a||{});const o=class t extends r{constructor(e){super(e,t.WALL_COUNT)}removeWall(t){super.removeWall(t)}hasWall(t){return super.hasWall(t)}getNeighborPosition(t){const{x:e,y:i}=this.position;switch(t){case 0:return{x:e,y:i-1};case 1:return{x:e+1,y:i};case 2:return{x:e,y:i+1};case 3:return{x:e-1,y:i};default:throw new Error(`Invalid wall direction: ${t}`)}}static getOppositeWall(t){switch(t){case 0:return 2;case 1:return 3;case 2:return 0;case 3:return 1;default:throw new Error(`Invalid wall direction: ${t}`)}}};((t,e,i)=>{e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i})(o,"WALL_COUNT"+"",4);let h=o;var c=Object.defineProperty,d=(t,e,i)=>((t,e,i)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);const u=class t{constructor(t,e){this.cellA=t,this.cellB=e}static create(e,i){if(this.wallPool.length>0){const t=this.wallPool.pop();return t.cellA=e,t.cellB=i,t}return new t(e,i)}static release(t){this.wallPool.length<this.MAX_POOL_SIZE&&this.wallPool.push(t)}equals(t){return this.cellA===t.cellA&&this.cellB===t.cellB||this.cellA===t.cellB&&this.cellB===t.cellA}toString(){return`Wall(${this.cellA.toString()} - ${this.cellB.toString()})`}};d(u,"wallPool",[]),d(u,"MAX_POOL_SIZE",1e4);let m=u;var f=Object.defineProperty,g=(t,e,i)=>((t,e,i)=>e in t?f(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class w{constructor(t){g(this,"parent"),g(this,"rank"),this.parent=Array.from({length:t},((t,e)=>e)),this.rank=new Array(t).fill(0)}createSet(t){this.parent[t]=t,this.rank[t]=0}findSet(t){if(t<0||t>=this.parent.length)throw new Error("Element not found in any set");return this.parent[t]!==t&&(this.parent[t]=this.findSet(this.parent[t])),this.parent[t]}mergeSet(t,e){const i=this.findSet(t),s=this.findSet(e);if(i===s)return;const n=this.rank[i],r=this.rank[s];n<r?this.parent[i]=s:n>r?this.parent[s]=i:(this.parent[s]=i,this.rank[i]=n+1)}}var p=Object.defineProperty,v=(t,e,i)=>((t,e,i)=>e in t?p(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);const S=class t{constructor(t=Date.now()){v(this,"seed"),this.seed=t}nextInt(){return this.seed=(this.seed*t.MULTIPLIER+t.INCREMENT)%t.MODULUS,this.seed}nextIntRange(e,i){const s=i-e+1,n=t.MODULUS-t.MODULUS%s;let r;do{r=this.nextInt()}while(r>=n);return e+r%s}nextDouble(){return this.nextInt()/t.MODULUS}nextDoubleRange(t,e){return t+this.nextDouble()*(e-t)}};v(S,"MULTIPLIER",1664525),v(S,"INCREMENT",1013904223),v(S,"MODULUS",4294967296);let I=S;class y extends Error{constructor(t,e){super(t),this.code=e,this.name="MazeError"}}class b extends y{constructor(t){super(t,"MAZE_GENERATION_ERROR"),this.name="MazeGenerationError"}}class E extends y{constructor(t){super(t,"INVALID_CONFIG_ERROR"),this.name="InvalidConfigError"}}var x=Object.defineProperty,M=(t,e,i)=>((t,e,i)=>e in t?x(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class C{static validate(t){this.validateDimensions(t),this.validateCellSize(t),this.validateAnimationSpeed(t)}static validateDimensions(t){if(t.width<this.MIN_DIMENSION||t.width>this.MAX_DIMENSION)throw new E(`Width must be between ${this.MIN_DIMENSION} and ${this.MAX_DIMENSION}`);if(t.height<this.MIN_DIMENSION||t.height>this.MAX_DIMENSION)throw new E(`Height must be between ${this.MIN_DIMENSION} and ${this.MAX_DIMENSION}`)}static validateCellSize(t){if(t.cellSize<this.MIN_CELL_SIZE||t.cellSize>this.MAX_CELL_SIZE)throw new E(`Cell size must be between ${this.MIN_CELL_SIZE} and ${this.MAX_CELL_SIZE}`)}static validateAnimationSpeed(t){if(t.animationSpeed<this.MIN_ANIMATION_SPEED||t.animationSpeed>this.MAX_ANIMATION_SPEED)throw new E(`Animation speed must be between ${this.MIN_ANIMATION_SPEED} and ${this.MAX_ANIMATION_SPEED}`)}}M(C,"MIN_DIMENSION",2),M(C,"MAX_DIMENSION",1e3),M(C,"MIN_CELL_SIZE",4),M(C,"MAX_CELL_SIZE",100),M(C,"MIN_ANIMATION_SPEED",1),M(C,"MAX_ANIMATION_SPEED",1e3);var A=Object.defineProperty,_=(t,e,i)=>((t,e,i)=>e in t?A(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class N{constructor(t){_(this,"_cells"),_(this,"wallList"),_(this,"sets"),_(this,"startCell",null),_(this,"endCell",null),C.validate(t),this._cells=new Array(t.width*t.height),this.wallList=[],this.sets=new w(t.width*t.height),this.initializeGrid(t)}get cells(){return this._cells}get width(){return this._cells.length>0?Math.sqrt(this._cells.length):0}get height(){return this.width}getCell(t,e){return t<0||t>=this.width||e<0||e>=this.height?null:this._cells[t+e*this.width]}getStartCell(){if(!this.startCell)throw new b("Start cell not set");return this.startCell}getEndCell(){if(!this.endCell)throw new b("End cell not set");return this.endCell}setStartCell(t){this.startCell=t}setEndCell(t){this.endCell=t}initializeGrid(t){for(let e=0;e<t.height;e++)for(let i=0;i<t.width;i++){const s=new h({x:i,y:e});this._cells[i+e*t.width]=s,this.sets.createSet(i+e*t.width)}for(let e=0;e<t.height;e++)for(let i=0;i<t.width;i++){const s=this.getCell(i,e);if(i<t.width-1){const t=this.getCell(i+1,e);this.addWall(s,t)}if(e<t.height-1){const t=this.getCell(i,e+1);this.addWall(s,t)}}}addWall(t,e){const i=m.create(t,e);this.wallList.some((t=>t.equals(i)))?m.release(i):this.wallList.push(i)}iterate(){if(0===this.wallList.length)return!0;const t=this.wallList.pop(),e=t.cellA.position.x+t.cellA.position.y*this.width,i=t.cellB.position.x+t.cellB.position.y*this.width;return this.sets.findSet(e)!==this.sets.findSet(i)&&(this.sets.mergeSet(e,i),this.removeWallsBetween(t.cellA,t.cellB)),m.release(t),!1}removeWallsBetween(t,e){const{x:i,y:s}=t.position,{x:n,y:r}=e.position;i===n?s<r?(t.removeWall(a.Bottom),e.removeWall(a.Top)):(t.removeWall(a.Top),e.removeWall(a.Bottom)):i<n?(t.removeWall(a.Right),e.removeWall(a.Left)):(t.removeWall(a.Left),e.removeWall(a.Right))}static generate(t){const e=new N(t),i=new I(t.seed||Date.now());for(let s=e.wallList.length-1;s>0;s--){const t=i.nextIntRange(0,s);[e.wallList[s],e.wallList[t]]=[e.wallList[t],e.wallList[s]]}return e.createExitCells(i),e}createExitCells(t){const e=t.nextIntRange(0,3);let i=0,s=0;switch(e){case a.Top:i=t.nextIntRange(0,this.width-1),s=0;break;case a.Right:s=t.nextIntRange(0,this.height-1),i=this.width-1;break;case a.Bottom:i=t.nextIntRange(0,this.width-1),s=this.height-1;break;case a.Left:s=t.nextIntRange(0,this.height-1),i=0}switch(this.startCell=this.getCell(i,s),e){case a.Top:i=t.nextIntRange(0,this.width-1),s=this.height-1;break;case a.Right:s=t.nextIntRange(0,this.height-1),i=0;break;case a.Bottom:i=t.nextIntRange(0,this.width-1),s=0;break;case a.Left:s=t.nextIntRange(0,this.height-1),i=this.width-1}this.endCell=this.getCell(i,s)}}var z=Object.defineProperty,L=(t,e,i)=>((t,e,i)=>e in t?z(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class k{constructor(t,e){this.canvas=t,L(this,"worker",null),L(this,"renderer",null),L(this,"currentConfig",null),L(this,"animationFrameId",null),L(this,"isAnimating",!1),L(this,"isSolving",!1),L(this,"onGenerationComplete"),L(this,"onError"),this.onError=e,this.initializeWorker()}initializeWorker(){this.worker=new Worker(new URL("/maze-generator-ts/assets/maze-worker-BDO96S6j.js",import.meta.url),{type:"module",name:"maze-worker"}),this.setupMessageHandler()}setupMessageHandler(){this.worker&&(this.worker.onmessage=t=>{const{type:e,payload:i}=t.data;switch(e){case"progress":this.handleProgress(i);break;case"complete":this.handleComplete(i);break;case"error":this.onError?.(i.message||"An error occurred during maze generation")}},this.worker.onerror=t=>{this.onError?.(t.message||"An error occurred in the worker")})}reconstructMaze(t){if(!this.currentConfig)throw new Error("No current config available for maze reconstruction");const e=new N(this.currentConfig);if(Array.isArray(t?._cells))for(let i=0;i<t._cells.length;i++){const s=t._cells[i];if(!s||!s.position)continue;const n=e.getCell(s.position.x,s.position.y);if(n&&Array.isArray(s.walls))for(let t=0;t<4;t++)s.walls[t]||n.removeWall(t)}if(t?.startCell?.position){const i=e.getCell(t.startCell.position.x,t.startCell.position.y);i&&e.setStartCell(i)}if(t?.endCell?.position){const i=e.getCell(t.endCell.position.x,t.endCell.position.y);i&&e.setEndCell(i)}return e}handleProgress(t){const{type:e,currentState:s,currentPath:n,openSet:r,closedSet:l}=t;switch(e){case"generate":if(s){const t=this.reconstructMaze(s);this.renderer?this.renderer.updateMaze(t):this.renderer=new i(this.canvas,t),this.renderer.render()}break;case"iterate":if(s){const t=this.reconstructMaze(s);this.renderer&&(this.renderer.updateMaze(t),this.renderer.render())}break;case"solve":case"iterateSolution":this.renderer&&n&&r&&l&&this.renderer.renderSolvingProgress(n,r,l)}}handleComplete(t){const{type:e,maze:s,solution:n}=t;switch(e){case"generate":if(s){const t=this.reconstructMaze(s);this.renderer?this.renderer.updateMaze(t):this.renderer=new i(this.canvas,t),this.renderer.render(),this.isAnimating=!1,null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.onGenerationComplete&&this.onGenerationComplete()}break;case"solve":n&&this.renderer&&(this.renderer.renderSolution(n),this.isSolving=!1,null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null))}}generateMaze(t){this.currentConfig=t,this.isAnimating=!0,this.worker?.postMessage({type:"generate",payload:t}),this.startAnimation()}startAnimation(){null!==this.animationFrameId&&cancelAnimationFrame(this.animationFrameId);const t=()=>{this.isAnimating&&(this.worker?.postMessage({type:"iterate"}),this.animationFrameId=requestAnimationFrame(t))};this.animationFrameId=requestAnimationFrame(t)}solveMaze(){this.isSolving||(this.isSolving=!0,this.worker?.postMessage({type:"solve"}),this.startSolvingAnimation())}startSolvingAnimation(){null!==this.animationFrameId&&cancelAnimationFrame(this.animationFrameId);const t=()=>{this.isSolving&&(this.worker?.postMessage({type:"iterateSolution"}),this.animationFrameId=requestAnimationFrame(t))};this.animationFrameId=requestAnimationFrame(t)}terminate(){null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.isAnimating=!1,this.isSolving=!1,this.worker?.terminate()}}var O=Object.defineProperty,P=(t,e,i)=>((t,e,i)=>e in t?O(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i)(t,"symbol"!=typeof e?e+"":e,i);class B{constructor(){P(this,"workerManager"),P(this,"isGenerating",!1),P(this,"isSolving",!1),P(this,"solveButton",null);const t=document.getElementById("mazeCanvas");if(!t)throw new Error("Canvas element not found");t.width=800,t.height=800,this.workerManager=new k(t,(t=>{t&&alert(t),this.isGenerating=!1,this.isSolving=!1,this.updateButtonStates()})),this.workerManager.onGenerationComplete=()=>{this.isGenerating=!1,this.updateButtonStates()},this.setupEventListeners()}setupEventListeners(){const t=document.getElementById("generate");this.solveButton=document.getElementById("solve"),t&&t.addEventListener("click",(()=>{this.handleGenerate()})),this.solveButton&&(this.solveButton.disabled=!0,this.solveButton.addEventListener("click",(()=>{this.handleSolve()})))}updateButtonStates(){this.solveButton&&(this.solveButton.disabled=this.isGenerating||this.isSolving)}handleGenerate(){if(this.isGenerating||this.isSolving)return;const t=parseInt(document.getElementById("width").value),e=parseInt(document.getElementById("height").value),i=parseInt(document.getElementById("seed").value);if(isNaN(t)||isNaN(e)||isNaN(i))alert("Please enter valid numbers for width, height, and seed");else try{this.isGenerating=!0,this.updateButtonStates(),this.workerManager.generateMaze({width:t,height:e,seed:i,algorithm:"kruskal",renderer:"canvas",animationSpeed:100,cellSize:20})}catch(s){this.isGenerating=!1,this.updateButtonStates(),alert(s instanceof Error?s.message:"Failed to generate maze")}}handleSolve(){if(!this.isGenerating&&!this.isSolving)try{this.isSolving=!0,this.updateButtonStates(),this.workerManager.solveMaze()}catch(t){this.isSolving=!1,this.updateButtonStates(),t instanceof b?alert(t.message):alert("Failed to solve maze")}}}document.addEventListener("DOMContentLoaded",(()=>{new B}));
//# sourceMappingURL=index-DWDZFK9u.js.map
